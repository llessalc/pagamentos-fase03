apiVersion: v1
kind: Service
metadata:
  name: app-pagamentos
  labels:
    app: app-pagamentos
spec:
  ports:
    - port: 8081
      targetPort: 8081
      name: port-default
    - port: 8080
      targetPort: 8081
      name: port-fallback
  selector:
    app: app-pagamentos
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-pagamentos
  labels:
    app: app-pagamentos
spec:
  selector:
    matchLabels:
      app: app-pagamentos
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app-pagamentos
        tier: frontend
    spec:
      containers:
        - name: app-pagamentos
          image: 373830381913.dkr.ecr.us-east-1.amazonaws.com/fiap-pedidos:app-pagamentos
          imagePullPolicy: Always
          env:
            - name: MYSQL_DATABASE
              value: pagamento_58
            - name: MYSQL_HOST
              value: ${DB_HOST}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
            - name: PEDIDOS_SERVICE
              value: app-pedido
            - name: MP_USER
              value: ${MP_USER}
            - name: MP_TOKEN
              value: ${MP_TOKEN}
            - name: MP_POS
              value: fiap58POS002
            - name: PAGAMENTO_WH
              value: ${PAGAMENTO_WH}

          ports:
            - containerPort: 8081
              name: app-pagamento
          command: ["/bin/bash", "-c"]
          args:
            - |
              mvn clean package
              mvn spring-boot:run
          resources:
            requests:
              cpu: 700m